<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.2.RELEASE</version>
	</parent>

	<groupId>com.yiji</groupId>
	<artifactId>test03-auth-server</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>test03-auth-server</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<springloaded.version>1.2.6.RELEASE</springloaded.version>
		<druid.version>1.0.29</druid.version>
		<mlog.core.version>0.0.4-SNAPSHOT</mlog.core.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
<!--			<scope>test</scope>-->
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<!--<scope>test</scope>-->
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- postgresql数据库 -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<scope>provided</scope>
			<version>2.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>provided</scope>
			<version>6.0.16.Final</version>
		</dependency>
		<!-- 引入Actuator监控依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.0</version>
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.1.35</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.5</version>
		</dependency>

		<!-- spring-session -->
		<dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
		  <groupId>org.springframework.session</groupId>
		  <artifactId>spring-session-data-redis</artifactId>
		</dependency>

		<!-- 接口文档 -->
		<dependency>
			<groupId>io.github.yedaxia</groupId>
			<artifactId>japidocs</artifactId>
			<version>1.4.4</version>
		</dependency>

		<!-- 数据库json格式数据 -->
		<dependency>
			<groupId>com.vladmihalcea</groupId>
			<artifactId>hibernate-types-52</artifactId>
			<version>2.4.3</version>
		</dependency>

		<dependency>
			<groupId>com.mlog</groupId>
			<artifactId>mlog-swagger-starter</artifactId>
			<version>${mlog.core.version}</version>
		</dependency>

		<dependency>
			<groupId>com.mlog</groupId>
			<artifactId>mlog-utils</artifactId>
			<version>${mlog.core.version}</version>
		</dependency>

		<!-- 邮箱 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<dependency>
			<groupId>com.mlog</groupId>
			<artifactId>lens-exporter</artifactId>
			<version>${mlog.core.version}</version>
		</dependency>

		<dependency>
			<groupId>com.mlog</groupId>
			<artifactId>excel-exporter</artifactId>
			<version>${mlog.core.version}</version>
		</dependency>
	</dependencies>

	<distributionManagement>
		<repository>
			<id>deployment</id>
			<name>Internal Releases</name>
			<url>https://repo.mlogcn.com/repository/releases/</url>
		</repository>
		<snapshotRepository>
			<id>deployment</id>
			<name>Internal Snapshots</name>
			<url>https://repo.mlogcn.com/repository/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.17</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>7.5.1</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!-- 指定该Main Class为全局的唯一入口 -->
					<mainClass>com.yiji.dolphin.AuthApplication</mainClass>
					<layout>ZIP</layout>
					<includeSystemScope>true</includeSystemScope>
					<fork>true</fork>
					<skip>false</skip>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal><!--可以把依赖的包都打包到生成的Jar包中-->
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- https://github.com/spotify/dockerfile-maven/blob/master/docs/usage.md -->
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.4.13</version>
				<executions>
					<execution>
						<id>default</id>
						<phase>verify</phase>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!--镜像仓库地址 -->
					<repository>106.75.70.89:8080/test03/auth-server</repository>
					<!--镜像tag -->
					<tag>${project.version}</tag>
					<!--镜像仓库用户名和密码 -->
					<username>pushuser</username>
					<password>yiJi123!@#</password>

					<!--自定义构建参数，可传递到Dockerfile文件中 -->
					<buildArgs>
						<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>

					<noCache>true</noCache>
					<dockerfile>${basedir}/Dockerfile</dockerfile>
					<contextDirectory>${basedir}</contextDirectory>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
