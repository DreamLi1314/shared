<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
   <parent>
      <artifactId>blog-statistical</artifactId>
      <groupId>com.mlogcn</groupId>
      <version>1.0-SNAPSHOT</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>

   <artifactId>blog-statistical-executor</artifactId>

   <dependencies>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-web</artifactId>
      </dependency>

      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-configuration-processor</artifactId>
         <optional>true</optional>
      </dependency>

      <dependency>
         <groupId>org.projectlombok</groupId>
         <artifactId>lombok</artifactId>
         <optional>true</optional>
      </dependency>

      <dependency>
         <groupId>com.baomidou</groupId>
         <artifactId>mybatis-plus-boot-starter</artifactId>
      </dependency>

      <dependency>
         <groupId>com.baomidou</groupId>
         <artifactId>mybatis-plus-generator</artifactId>
         <scope>test</scope>
      </dependency>

<!--      <dependency>-->
<!--         <groupId>org.apache.velocity</groupId>-->
<!--         <artifactId>velocity-engine-core</artifactId>-->
<!--         <scope>test</scope>-->
<!--      </dependency>-->

      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-test</artifactId>
         <scope>test</scope>
         <exclusions>
            <exclusion>
               <groupId>org.junit.vintage</groupId>
               <artifactId>junit-vintage-engine</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>mysql</groupId>
         <artifactId>mysql-connector-java</artifactId>
      </dependency>

      <dependency>
         <groupId>com.mlog</groupId>
         <artifactId>mlog-swagger-starter</artifactId>
      </dependency>

      <dependency>
         <groupId>com.mlog</groupId>
         <artifactId>mlog-utils</artifactId>
      </dependency>

      <dependency>
         <groupId>com.xuxueli</groupId>
         <artifactId>xxl-job-core</artifactId>
      </dependency>

      <dependency>
         <groupId>com.mlog</groupId>
         <artifactId>lens-exporter</artifactId>
      </dependency>

      <dependency>
         <groupId>com.mlog</groupId>
         <artifactId>spring-boot-start-resttemplate</artifactId>
      </dependency>

      <dependency>
         <groupId>com.mlog</groupId>
         <artifactId>excel-exporter</artifactId>
      </dependency>

      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-text</artifactId>
      </dependency>

   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
               <execution>
                  <phase>compile</phase>
                  <goals>
                     <goal>run</goal>
                  </goals>
                  <configuration>
                     <tasks>
                        <echo>Copy Dockerfile file</echo>
                        <copy file="Dockerfile" tofile="${basedir}/target/container/Dockerfile"/>
                     </tasks>
                  </configuration>
               </execution>
            </executions>
         </plugin>

<!--         <plugin>-->
<!--            <groupId>org.apache.maven.plugins</groupId>-->
<!--            <artifactId>maven-compiler-plugin</artifactId>-->
<!--            <version>3.6.2</version>-->
<!--            <configuration>-->
<!--               <source>1.8</source>-->
<!--               <target>1.8</target>-->
<!--               <encoding>UTF-8</encoding>-->
<!--            </configuration>-->
<!--         </plugin>-->

         <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
               <!-- 指定该Main Class为全局的唯一入口 -->
               <layout>ZIP</layout>
               <includeSystemScope>true</includeSystemScope>
               <outputDirectory>${basedir}/target/container</outputDirectory>
               <fork>true</fork>
               <skip>false</skip>
            </configuration>
            <executions>
               <execution>
                  <id>repackage</id>
                  <goals>
                     <goal>repackage</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <version>1.4.13</version>
            <executions>
               <execution>
                  <id>default</id>
                  <phase>verify</phase>
                  <goals>
                     <goal>build</goal>
                     <goal>push</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <!--镜像仓库地址 -->
               <repository>161.189.222.190:8080/mlog/blog-statistical-executor</repository>
               <!--镜像tag -->
               <tag>${project.version}</tag>
               <!--镜像仓库用户名和密码 -->
               <username>pushuser</username>
               <password><![CDATA[yiJi123!@#]]></password>

               <!--自定义构建参数，可传递到Dockerfile文件中 -->
               <buildArgs>
                  <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
               </buildArgs>

               <noCache>true</noCache>
               <contextDirectory>${basedir}/target/container</contextDirectory>
            </configuration>
         </plugin>
      </plugins>
   </build>

</project>
